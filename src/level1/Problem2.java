package level1;

import java.util.ArrayList;

/*Problem 2 
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
public class Problem2 {

	public static void main(String[] args)
	{
		System.out.println(evenValueFiboSum());
		System.out.println(evenValueFiboSumMethod2());
	}
	
	
	static int evenValueFiboSum()
	{
		int value=0,i=0;
		int sum=0;
		while(value<4000000)
		{
			value=generateFibonacciNumbers(i);
			if(value%2==0)
			sum=sum+value;
			i++;
		}	
		return sum;
	}
	
	//method 2
	static int evenValueFiboSumMethod2()
	{
		int value=0;
		int sum=0;
		
		int a=0,b=1,c=a+b;
		while(value<4000000)
		{
			value=c;
			if(value%2==0)
			sum=sum+value;
			a=b;b=c;
			c=a+b;
		}	
		return sum;
	}
	
	static int  generateFibonacciNumbers(int n)
	{
		
		if(n==0)
		{
			return 0;
		}
		
		else if(n==1)
		{
			return 1;
		}
		else 
		{
		int x= 	generateFibonacciNumbers(n-1)+generateFibonacciNumbers(n-2);
		return x;
		}

		
	}
}
